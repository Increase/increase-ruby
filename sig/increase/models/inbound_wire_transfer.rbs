module Increase
  module Models
    type inbound_wire_transfer =
      {
        id: String,
        account_id: String,
        account_number_id: String,
        amount: Integer,
        :beneficiary_address_line1 => String?,
        :beneficiary_address_line2 => String?,
        :beneficiary_address_line3 => String?,
        beneficiary_name: String?,
        beneficiary_reference: String?,
        created_at: Time,
        :creditor_address_line1 => String?,
        :creditor_address_line2 => String?,
        :creditor_address_line3 => String?,
        creditor_name: String?,
        :debtor_address_line1 => String?,
        :debtor_address_line2 => String?,
        :debtor_address_line3 => String?,
        debtor_name: String?,
        description: String,
        end_to_end_identification: String?,
        input_message_accountability_data: String?,
        instructing_agent_routing_number: String?,
        instruction_identification: String?,
        :originator_address_line1 => String?,
        :originator_address_line2 => String?,
        :originator_address_line3 => String?,
        originator_name: String?,
        originator_routing_number: String?,
        originator_to_beneficiary_information: String?,
        :originator_to_beneficiary_information_line1 => String?,
        :originator_to_beneficiary_information_line2 => String?,
        :originator_to_beneficiary_information_line3 => String?,
        :originator_to_beneficiary_information_line4 => String?,
        reversal: Increase::InboundWireTransfer::Reversal?,
        sender_reference: String?,
        status: Increase::Models::InboundWireTransfer::status,
        type: Increase::Models::InboundWireTransfer::type_,
        unique_end_to_end_transaction_reference: String?,
        unstructured_remittance_information: String?,
        wire_drawdown_request_id: String?
      }

    class InboundWireTransfer < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor account_id: String

      attr_accessor account_number_id: String

      attr_accessor amount: Integer

      attr_accessor beneficiary_address_line1: String?

      attr_accessor beneficiary_address_line2: String?

      attr_accessor beneficiary_address_line3: String?

      attr_accessor beneficiary_name: String?

      attr_accessor beneficiary_reference: String?

      attr_accessor created_at: Time

      attr_accessor creditor_address_line1: String?

      attr_accessor creditor_address_line2: String?

      attr_accessor creditor_address_line3: String?

      attr_accessor creditor_name: String?

      attr_accessor debtor_address_line1: String?

      attr_accessor debtor_address_line2: String?

      attr_accessor debtor_address_line3: String?

      attr_accessor debtor_name: String?

      attr_accessor description: String

      attr_accessor end_to_end_identification: String?

      attr_accessor input_message_accountability_data: String?

      attr_accessor instructing_agent_routing_number: String?

      attr_accessor instruction_identification: String?

      attr_accessor originator_address_line1: String?

      attr_accessor originator_address_line2: String?

      attr_accessor originator_address_line3: String?

      attr_accessor originator_name: String?

      attr_accessor originator_routing_number: String?

      attr_accessor originator_to_beneficiary_information: String?

      attr_accessor originator_to_beneficiary_information_line1: String?

      attr_accessor originator_to_beneficiary_information_line2: String?

      attr_accessor originator_to_beneficiary_information_line3: String?

      attr_accessor originator_to_beneficiary_information_line4: String?

      attr_accessor reversal: Increase::InboundWireTransfer::Reversal?

      attr_accessor sender_reference: String?

      attr_accessor status: Increase::Models::InboundWireTransfer::status

      attr_accessor type: Increase::Models::InboundWireTransfer::type_

      attr_accessor unique_end_to_end_transaction_reference: String?

      attr_accessor unstructured_remittance_information: String?

      attr_accessor wire_drawdown_request_id: String?

      def initialize: (
        id: String,
        account_id: String,
        account_number_id: String,
        amount: Integer,
        beneficiary_address_line1: String?,
        beneficiary_address_line2: String?,
        beneficiary_address_line3: String?,
        beneficiary_name: String?,
        beneficiary_reference: String?,
        created_at: Time,
        creditor_address_line1: String?,
        creditor_address_line2: String?,
        creditor_address_line3: String?,
        creditor_name: String?,
        debtor_address_line1: String?,
        debtor_address_line2: String?,
        debtor_address_line3: String?,
        debtor_name: String?,
        description: String,
        end_to_end_identification: String?,
        input_message_accountability_data: String?,
        instructing_agent_routing_number: String?,
        instruction_identification: String?,
        originator_address_line1: String?,
        originator_address_line2: String?,
        originator_address_line3: String?,
        originator_name: String?,
        originator_routing_number: String?,
        originator_to_beneficiary_information: String?,
        originator_to_beneficiary_information_line1: String?,
        originator_to_beneficiary_information_line2: String?,
        originator_to_beneficiary_information_line3: String?,
        originator_to_beneficiary_information_line4: String?,
        reversal: Increase::InboundWireTransfer::Reversal?,
        sender_reference: String?,
        status: Increase::Models::InboundWireTransfer::status,
        type: Increase::Models::InboundWireTransfer::type_,
        unique_end_to_end_transaction_reference: String?,
        unstructured_remittance_information: String?,
        wire_drawdown_request_id: String?
      ) -> void

      def to_hash: -> {
        id: String,
        account_id: String,
        account_number_id: String,
        amount: Integer,
        :beneficiary_address_line1 => String?,
        :beneficiary_address_line2 => String?,
        :beneficiary_address_line3 => String?,
        beneficiary_name: String?,
        beneficiary_reference: String?,
        created_at: Time,
        :creditor_address_line1 => String?,
        :creditor_address_line2 => String?,
        :creditor_address_line3 => String?,
        creditor_name: String?,
        :debtor_address_line1 => String?,
        :debtor_address_line2 => String?,
        :debtor_address_line3 => String?,
        debtor_name: String?,
        description: String,
        end_to_end_identification: String?,
        input_message_accountability_data: String?,
        instructing_agent_routing_number: String?,
        instruction_identification: String?,
        :originator_address_line1 => String?,
        :originator_address_line2 => String?,
        :originator_address_line3 => String?,
        originator_name: String?,
        originator_routing_number: String?,
        originator_to_beneficiary_information: String?,
        :originator_to_beneficiary_information_line1 => String?,
        :originator_to_beneficiary_information_line2 => String?,
        :originator_to_beneficiary_information_line3 => String?,
        :originator_to_beneficiary_information_line4 => String?,
        reversal: Increase::InboundWireTransfer::Reversal?,
        sender_reference: String?,
        status: Increase::Models::InboundWireTransfer::status,
        type: Increase::Models::InboundWireTransfer::type_,
        unique_end_to_end_transaction_reference: String?,
        unstructured_remittance_information: String?,
        wire_drawdown_request_id: String?
      }

      type reversal =
        {
          reason: Increase::Models::InboundWireTransfer::Reversal::reason,
          reversed_at: Time
        }

      class Reversal < Increase::Internal::Type::BaseModel
        attr_accessor reason: Increase::Models::InboundWireTransfer::Reversal::reason

        attr_accessor reversed_at: Time

        def initialize: (
          reason: Increase::Models::InboundWireTransfer::Reversal::reason,
          reversed_at: Time
        ) -> void

        def to_hash: -> {
          reason: Increase::Models::InboundWireTransfer::Reversal::reason,
          reversed_at: Time
        }

        type reason = :duplicate | :creditor_request

        module Reason
          extend Increase::Internal::Type::Enum

          # The inbound wire transfer was a duplicate.
          DUPLICATE: :duplicate

          # The recipient of the wire transfer requested the funds be returned to the sender.
          CREDITOR_REQUEST: :creditor_request

          def self?.values: -> ::Array[Increase::Models::InboundWireTransfer::Reversal::reason]
        end
      end

      type status = :pending | :accepted | :declined | :reversed

      module Status
        extend Increase::Internal::Type::Enum

        # The Inbound Wire Transfer is awaiting action, will transition automatically if no action is taken.
        PENDING: :pending

        # The Inbound Wire Transfer is accepted.
        ACCEPTED: :accepted

        # The Inbound Wire Transfer was declined.
        DECLINED: :declined

        # The Inbound Wire Transfer was reversed.
        REVERSED: :reversed

        def self?.values: -> ::Array[Increase::Models::InboundWireTransfer::status]
      end

      type type_ = :inbound_wire_transfer

      module Type
        extend Increase::Internal::Type::Enum

        INBOUND_WIRE_TRANSFER: :inbound_wire_transfer

        def self?.values: -> ::Array[Increase::Models::InboundWireTransfer::type_]
      end
    end
  end
end
